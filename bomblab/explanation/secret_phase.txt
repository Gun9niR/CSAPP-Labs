Dump of assembler code for function secret_phase:
   0x0000000000401242 <+0>:	push   %rbx
   0x0000000000401243 <+1>:	callq  0x40149e <read_line>
   0x0000000000401248 <+6>:	mov    $0xa,%edx                    // 10 -> %edx
   0x000000000040124d <+11>:	mov    $0x0,%esi                    // 0 -> %esi
   0x0000000000401252 <+16>:	mov    %rax,%rdi                    // the address of the string -> %rdi
   0x0000000000401255 <+19>:	callq  0x400bd0 <strtol@plt>        // convert the string to a decimal number
   0x000000000040125a <+24>:	mov    %rax,%rbx                    // %rax -> %rbx
   0x000000000040125d <+27>:	lea    -0x1(%rax),%eax              // %rax -= 1
   0x0000000000401260 <+30>:	cmp    $0x3e8,%eax                  // must 0 <= %eax <= 1000
   0x0000000000401265 <+35>:	jbe    0x40126c <secret_phase+42>
   0x0000000000401267 <+37>:	callq  0x40143a <explode_bomb>
   0x000000000040126c <+42>:	mov    %ebx,%esi                    // %ebx -> %esi (original number)
   0x000000000040126e <+44>:	mov    $0x6030f0,%edi               // 0x6030f0 -> %edi
   0x0000000000401273 <+49>:	callq  0x401204 <fun7>
   0x0000000000401278 <+54>:	cmp    $0x2,%eax                    // result of func7 must == 2
   0x000000000040127b <+57>:	je     0x401282 <secret_phase+64>
   0x000000000040127d <+59>:	callq  0x40143a <explode_bomb>
   0x0000000000401282 <+64>:	mov    $0x402438,%edi               // defused
   0x0000000000401287 <+69>:	callq  0x400b10 <puts@plt>
   0x000000000040128c <+74>:	callq  0x4015c4 <phase_defused>
   0x0000000000401291 <+79>:	pop    %rbx
   0x0000000000401292 <+80>:	retq  
